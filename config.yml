pipeline:
  model:
    name: 'FCNCastellano'
    params:
#      Castellano params
      in_channels: 3
      out_channels: 64
#      ResNet params
#      initial_size: 128
#      in_channels: 3
#      blocks_sizes: !!python/tuple [32, 64, 128, 256]
#      deepths: !!python/tuple [1, 1, 1, 1]
#      activation: 'relu'
  optimizers:
    - name: "SGD"
      params:
        lr: !!python/float 10e-5
        momentum: 0.9
  schedulers:
    - name: 'StepLR'
      params:
        step_size: 15
        gamma: 0.3
  criterions:
    mae:
      name: 'L1Loss'
    mse:
      name: 'MSELoss'
  data:
    train:
      transforms:
        - name: 'HorizontalFlip'
          params:
            p: 0.5
        - name: 'VerticalFlip'
      dataloader:
        batch_size: 64
        num_workers: 5
        shuffle: True
      datasets:
        - name: "VisDroneDatasetCC"
          params:
            data_root: '/Users/olega/Downloads/VisDrone2020-CC-split/val'
            im_folder: 'images'
            an_folder: 'annotations'
            resize: !!python/tuple [128, 128]
            normalize: True
#        - name: "VisDroneDatasetDET"
#          params:
#            data_root: '/Users/olega/Downloads/VisDrone2019-DET-train'
#            im_folder: 'images'
#            an_folder: 'annotations'
#            resize: !!python/tuple [128, 128]
#            normalize: True
    val:
      dataloader:
        batch_size: 64
        num_workers: 5
        shuffle: False
      datasets:
        - name: "VisDroneDatasetCC"
          params:
            data_root: '/Users/olega/Downloads/VisDrone2020-CC-split/val'
            im_folder: 'images'
            an_folder: 'annotations'
            resize: !!python/tuple [128, 128]
            normalize: True
#        - name: "VisDroneDatasetDET"
#          params:
#            data_root: '/Users/olega/Downloads/VisDrone2019-DET-val'
#            im_folder: 'images'
#            an_folder: 'annotations'
#            resize: !!python/tuple [128, 128]
#            normalize: True

trainer:
  logger:
    name: 'TensorBoardLogger'
    params:
      save_dir: './logs/'
      name: 'default_logger'
      version: 'version5'
  checkpoint_callback:
    filepath: './models/new2/{epoch}-{val_loss:.4f}'
    monitor: 'val_loss'
    verbose: True
    save_last: True
    save_top_k: 3
    save_weights_only: False
    mode: 'min'
    period: 1
    prefix: ''

#  callbacks:
#    - name: 'EarlyStopping'
#      params:
#        monitor: 'val_loss'
#        min_delta: 0.00
#        patience: 1
#        verbose: False
#        mode: 'max'

  fast_dev_run: False
  gpus: 0
  max_epochs: 10
  min_epochs: 1
  log_every_n_steps: 1

test:
  checkpoint_path: '/Users/olega/PycharmProjects/CrowdCounting/models/last.ckpt' # None or path to checkpoint
  resize: !!python/tuple [128, 128]  # same as in dataset!!!
  benchmark: True

